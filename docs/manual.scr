@begin[ref=index](section)
   @title(Overview)
   @c(cl-polynomial) is a library for factoring polynomials in one variable over
   finite fields with a prime number of elements \(p\) or over integers. @b(NB:)
   Many provided functions require \(p\) as their last argument. No special
   tests are done to check if \(p\) is really a prime and behaviour is undefined
   if it is not (e.g. some functions can simply become non-terminating).

   Few examples:
   @begin[lang=lisp](code)
CL-USER> (defpackage example
           (:use #:cl)
           (:local-nicknames (#:p   #:cl-polynomial/polynomial)
                             (#:zx  #:cl-polynomial/zx)
                             (#:fpx #:cl-polynomial/fpx)))
#<PACKAGE "EXAMPLE">
CL-USER> (in-package :example)
#<PACKAGE "EXAMPLE">
EXAMPLE> (p:sequence->polynomial #*1110010101001)
#<P:POLYNOMIAL X^12 + X^9 + X^7 + X^5 + X^2 + X + 1>
EXAMPLE> (fpx:factor * 11)
((1 . #<P:POLYNOMIAL X^6 - 5X^5 + 4X^4 + 3X^3 - 3X^2 + 5X - 2>)
 (1 . #<P:POLYNOMIAL X + 5>) (1 . #<P:POLYNOMIAL X^5 - X^3 + 1>))
1
EXAMPLE> (p:list->polynomial '(2 1 -1 -1 -4 -2 -2 1 1 2))
#<P:POLYNOMIAL 2X^9 + X^8 + X^7 - 2X^6 - 2X^5 - 4X^4 - X^3 - X^2 + X + 2>
EXAMPLE> (zx:factor *)
((1 . #<P:POLYNOMIAL X^4 - X - 1>) (1 . #<P:POLYNOMIAL X^3 + X^2 - 1>)
 (1 . #<P:POLYNOMIAL 2X^2 - X + 2>))
1
   @end(code)
@end(section)

@begin(section)
   @title(API)
   A name of a package with described functions is given in parentheses.
   @begin(section)
     @title(Utility functions (@c(cl-polynomial/util)))
     @cl:with-package[name="cl-polynomial/util"](
       @cl:doc(function mod-sym)
       @cl:doc(function invert-integer)
       @cl:doc(function gcdex)
     )
   @end(section)
   @begin(section)
     @title(Basic operations on polynomials (@c(cl-polynomial/polynomial)))
     @cl:with-package[name="cl-polynomial/polynomial"](
       @cl:doc(function list->polynomial)
       @cl:doc(function monomials->polynomial)
       @cl:doc(function sequence->polynomial)
       @cl:doc(function polynomial->list)
       @cl:doc(function polynomial=)
       @cl:doc(function degree)
       @cl:doc(function leading-coeff)
       @cl:doc(function map-poly)
       @cl:doc(function derivative)
       @cl:doc(function monicp)
       @cl:doc(function constantp)
       @cl:doc(variable +one+)
       @cl:doc(variable +zero+)
       @cl:doc(variable +variable+)
     )
   @end(section)
   @begin(section)
     @title(Algebraic operations for polynomials over a ring (@c(cl-polynomial/polynomial)))
     @cl:with-package[name="cl-polynomial/polynomial"](
       @cl:doc(function negate)
       @cl:doc(function add)
       @cl:doc(function subtract)
       @cl:doc(function multiply)
       @cl:doc(function scale)
       @cl:doc(function expt)
     )
   @end(section)
   @begin(section)
     @title(Division and factorization in \(\mathbb{F}_p[x]\) (@c(cl-polynomial/fpx)))
     @cl:with-package[name="cl-polynomial/fpx"](
       @cl:doc(function modulo)
       @cl:doc(function divide)
       @cl:doc(function remainder)
       @cl:doc(function gcd)
       @cl:doc(function gcdex)

       @cl:doc(function square-free)
       @cl:doc(function reducing-polynomials)
       @cl:doc(function factor)
       @cl:doc(function irreduciblep)
     )
   @end(section)
   @begin(section)
     @title(Factorization in \(\mathbb{Z}[x]\) (@c(cl-polynomial/zx)))
     @cl:with-package[name="cl-polynomial/zx"](
       @cl:doc(function suitable-primes)
       @cl:doc(function remove-content)
       @cl:doc(function lift-factors)
       @cl:doc(function gcd)
       @cl:doc(function square-free)
       @cl:doc(function factor)
       @cl:doc(function irreduciblep)
       @cl:doc(function cyclotomic)
     )
   @end(section)
   @begin(section)
     @title(Auxiliary number-theoretic functions)
     These functions are rather slow and are used only in testing of the main
     part of this library.
     @cl:with-package[name="cl-polynomial/z"](
       @cl:doc(function factor)
       @cl:doc(function totient)
       @cl:doc(function moebius)
     )
   @end(section)
@end(section)
